#
# On push of a tag, build the server docker image, make sure it comes up and
# responds, and push it to the github container registry.
#
# The docker image repository is named after the github repository (including
# the owner name), and the image's tag is set to the triggering git tag.
#
# Note that working-directory is a hard-coded to scala-server.
#
name: on-tag-build-and-push-image
on:
  push:
    tags:
      - '1.*'
jobs:
    build:
      timeout-minutes: 15
      runs-on: ubuntu-18.04
      steps:
        - name: Get Git Repository Info
          run: |
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            echo "OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
            echo "FULL_REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
        - name: Set Image and Container Names
          run: |
            echo "CONTAINER_NAME=${FULL_REPOSITORY#${OWNER}/}" >> $GITHUB_ENV
            echo "DOCKER_IMAGE=ghcr.io/$FULL_REPOSITORY:$TAG" >> $GITHUB_ENV
        - uses: actions/checkout@v2
        - uses: olafurpg/setup-scala@v12
          with:
            java-version: openjdk@1.9.0
        - name: Build and Unzip Play Distribution
          run: ./build-play-server.sh
          working-directory: "."
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Github Container Registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GH_CONTAINER_REGISTRY_PAT }}
        - name: Build Docker Image and Push
          uses: docker/build-push-action@v2
          with:
            context: "scala-server"
            file: scala-server/Dockerfile.run-play-server
            push: true
            no-cache: true
            tags: |
              ${{ env.DOCKER_IMAGE }}
        - name: Start the Container
          run: ./run-test-server-container.sh $CONTAINER_NAME $DOCKER_IMAGE 
          working-directory: "."
          env:
            PLAY_SECRET: ${{ secrets.PLAY_SECRET }}
            ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        - name: Access the Server
          run: ./handshake-request.sh
          working-directory: "."
        - name: Stop and Remove the Container
          run: ./kill-container.sh $CONTAINER_NAME
          working-directory: "."

